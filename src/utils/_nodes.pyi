from typing import Generator, TypeVar
from ._nameable import Nameable

_T = TypeVar("_T")

def getFullname(value: PathNode | str) -> str: ...

def nodable(*parts, cls: type[_T]) -> _T: ...

class PathNode(Nameable):
    @property
    def parent(self) -> PathNode | None: ...
    @property
    def parents(self) -> Generator[PathNode]: ...
    @property
    def fullname(self) -> str: ...
    @staticmethod
    def of(value) -> PathNode: ...
    @staticmethod
    def normalize(value) -> str: ...
    def __str__(self) -> str: ...

class ImportPathNode(PathNode):
    @property
    def parent(self) -> ImportPathNode | None: ...
    @staticmethod
    def of(value) -> ImportPathNode: ...
    def __str__(self) -> str: ...
